@startuml

title __PERSON's Class Diagram__\n

  namespace com.company {
    namespace data.person {
      class com.company.data.person.Faculty {
          - facultyCount : int
          - facultyCourseList : ArrayList<Course>
          - facultySessionList : ArrayList<Session>
          - hireDate : String
          - id : String
          - tenured : boolean
          + Faculty()
          + Faculty()
          + addCourse()
          + addSession()
          + generateId()
          + getFacultyCourseList()
          + getHireDate()
          + getId()
          + getTenured()
          + outputFaculty()
          + removeCourse()
          + removeSession()
          + setHireDate()
          + setId()
          + setTenured()
          + toString()
      }
    }
  }
  

  namespace com.company {
    namespace data.person {
      abstract class com.company.data.person.Person {
          - email : String
          - tel : String
          + Person()
          + Person()
          + clone()
          + compareTo()
          + equals()
          + getAddressInfo()
          + getEmail()
          + getName()
          + getTel()
          + hashCode()
          + setAddressInfo()
          + setEmail()
          + setName()
          + setTel()
          + toString()
          # checkStringValue()
      }
    }
  }
  

  namespace com.company {
    namespace data.person {
      class com.company.data.person.PersonAddress {
          - city : String
          - state : String
          - street : String
          - zip : String
          + PersonAddress()
          + PersonAddress()
          + compareTo()
          + equals()
          + getCity()
          + getState()
          + getStreet()
          + getZip()
          + setCity()
          + setState()
          + setStreet()
          + setZip()
          + toString()
          - checkStringValue()
      }
    }
  }
  

  namespace com.company {
    namespace data.person {
      class com.company.data.person.PersonDirectory {
          - facultyList : ArrayList<Faculty>
          - personList : ArrayList<Person>
          - studentList : ArrayList<Student>
          + PersonDirectory()
          + addPerson()
          + addPersonClone()
          + findPerson()
          + getFacultyAsString()
          + getFacultyOutputData()
          + getScheduledStudentsOutputData()
          + getStudentAsString()
          + getUnscheduledStudentsOutputData()
          + removePerson()
          + sort()
          + toString()
      }
    }
  }
  

  namespace com.company {
    namespace data.person {
      class com.company.data.person.PersonName {
          - firstName : String
          - lastName : String
          - midName : String
          + PersonName()
          + PersonName()
          + compareTo()
          + equals()
          + getFirstName()
          + getLastName()
          + getMidName()
          + setFirstName()
          + setLastName()
          + setMidName()
          + toString()
          - checkStringValue()
      }
    }
  }
  

  namespace com.company {
    namespace data.person {
      class com.company.data.person.Student {
          - courseScheduledList : ArrayList<Course>
          - courseWishList : ArrayList<String>
          - dateStart : String
          - dob : String
          - gpa : String
          - id : String
          - scheduledStatus : boolean
          - sessionScheduledList : ArrayList<Session>
          - studentCount : int
          + Student()
          + Student()
          + addCourse()
          + addSession()
          + generateCourseWishList()
          + generateId()
          + getCourseScheduledList()
          + getDateStart()
          + getDob()
          + getGpa()
          + getId()
          + getScheduledStatus()
          + outputScheduledStudents()
          + removeCourse()
          + removeSession()
          + setDateStart()
          + setDob()
          + setGpa()
          + setId()
          + setScheduledStatus()
          + toString()
          + updateScheduledStatus()
      }
    }
  }
  

  com.company.data.person.Faculty -up-|> com.company.data.person.Person
  com.company.data.person.Person .up.|> java.io.Serializable
  com.company.data.person.Person .up.|> java.lang.Cloneable
  com.company.data.person.Person .up.|> java.lang.Comparable
  com.company.data.person.Person o-- com.company.data.person.PersonAddress : addressInfo
  com.company.data.person.Person o-- com.company.data.person.PersonName : name
  com.company.data.person.PersonAddress .up.|> java.lang.Comparable
  com.company.data.person.PersonName .up.|> java.lang.Comparable
  com.company.data.person.Student -up-|> com.company.data.person.Person


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
